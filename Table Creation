/*
  Class Creation
*/
/*------------------------------------------------------------------
  Maintence_Item

  A maintenance service that Dave’s offers.
	Note: name has been changed to Mname due to query name conflict.
--------------------------------------------------------------------*/
CREATE TABLE Maintenance_Item (
	mName VARCHAR(40) NOT NULL,
	laborHours int,

	PRIMARY KEY maintenance_item_pk (mName),
);
 /*------------------------------------------------------------------
  Part_Maintenance

  A particular part as used within a given maintenance item.
--------------------------------------------------------------------*/
CREATE TABLE Part_Maintenance (
	mName VARCHAR(40) NOT NULL,
	partSerialNum int NOT NULL,

	PRIMARY KEY part_maintenance_pk (mName, partSerialNum),
	CONSTRAINT maintenance_item_part_maintenance_fk FOREIGN KEY (mName) REFERENCES Maintenance_Item(mName),
	CONSTRAINT part_at_Daves_part_maintenance_fk FOREIGN KEY (partSerialNum) REFERENCES part_at_Daves (serialNum)
);

 /*------------------------------------------------------------------
  Part_at_Daves

  A part that Dave’s has on hand for use in maintenance items.
--------------------------------------------------------------------*/
CREATE TABLE Part_at_Daves (
	orderedFromID int NOT NULL,
	serialNum int NOT NULL,

	PRIMARY KEY Part_at_Daves_pk (serialNum),
	CONSTRAINT Part_Order_Part_at_Daves_fk FOREIGN KEY (orderedFromID) REFERENCES Part_Order (orderID)
);

 /*------------------------------------------------------------------
	Part_Order
--------------------------------------------------------------------*/
CREATE TABLE Part_Order (
	orderID int NOT NULL AUTO_INCREMENT,
	partName VARCHAR(50) NOT NULL,
	supplierName VARCHAR(50) NOT NULL, 
	date DATE,
	quantity int,
	priceForOne int,

	PRIMARY KEY Part_Order_pk (orderID),
	CONSTRAINT part_part_order_fk FOREIGN KEY (partName) REFERENCES Part (name),
	CONSTRAINT supplier_part_prder_fk FOREIGN KEY (supplierName) REFERENCES Supplier(supplierName),
	CONSTRAINT Part_Order_ck UNIQUE (partName, supplierName, date),
);

 /*------------------------------------------------------------------
	Merchandise_Item_Order
--------------------------------------------------------------------*/
CREATE TABLE Merchandise_Item_Order (
	merchandiseOrderID int NOT NULL AUTO_INCREMENT,
	supplierName VARCHAR(50) NOT NULL,
	merchandiseItem VARCHAR(50) NOT NULL,
	date Date,
	quantity int,
	priceForOne int,

	PRIMARY KEY Merchandise_Item_Order_pk (merchandiseOrderID),
	CONSTRAINT supplier_merchandise_item_order_fk FOREIGN KEY (supplierName) REFERENCES Supplier(supplierName),
	CONSTRAINT merchandise_merchandise_item_order_fk FOREIGN KEY (merchandiseItem) REFERENCES Merchandise(name),
	CONSTRAINT Merchandise_Item_Order_ck UNIQUE (supplierName, merchandiseItem, date)
);
 /*------------------------------------------------------------------
	Merchandise_Item_Instore
--------------------------------------------------------------------*/
CREATE TABLE Merchandise_Item_InStore (
	orderedFromID int NOT NULL,
	serialNum int NOT NULL,

	PRIMARY KEY Merchandise_Item_InStore_pk (serialNum),
	CONSTRAINT Merchandise_Item_Order_Merchandise_Item_InStore_fk FOREIGN KEY (orderedFromID) REFERENCES Merchandise_Item_Order (merchandiseOrderID)
);
/*------------------------------------------------------------------
 Merchandise
--------------------------------------------------------------------*/
CREATE TABLE Merchandise (
	name VARCHAR(50) NOT NULL,

	PRIMARY KEY Merchandise_pk (name)
);

 /*------------------------------------------------------------------
	Supplier
--------------------------------------------------------------------*/
CREATE TABLE Supplier (
	name VARCHAR(50) NOT NULL,
	email VARCHAR(20),
	phone VARCHAR(12),

	PRIMARY KEY Supplier_pk (name)
);

 /*------------------------------------------------------------------
	Part
--------------------------------------------------------------------*/
CREATE TABLE Part (
	name VARCHAR(50) NOT NULL,

	PRIMARY KEY Part_pk (name)
);
 /*------------------------------------------------------------------
    Maint_Item_Work
--------------------------------------------------------------------*/
CREATE TABLE Maintenance_Item_Work (
	itemWorkID int NOT NULL AUTO_INCREMENT,
	mechanicID int NOT NULL,
	ST_ID int NOT NULL,
	custID int NOT NULL,
	date Date NOT NULL,
	vehicleID int NOT NULL,
	maint_item_name VARCHAR(40) NOT NULL,
	finalCost int,

	PRIMARY KEY Maintenance_Item_Work_pk (itemWorkID),
	CONSTRAINT Employee_Maintenance_Item_Work_fk FOREIGN KEY (mechanicID) REFERENCES Employee (employeeID),
	CONSTRAINT visit_Maintenance_Item_Work_fk FOREIGN KEY (ST_ID, custID, date, vehicleID) REFERENCES Visit (ST_ID, custID, date, vehicleID),
	CONSTRAINT Vehicle_Maintenance_Maintenance_Item_Work_fk FOREIGN KEY (vehicleID, maint_item_name) REFERENCES Vehicle_Maintenance (vehicleID, maint_item_name),
	CONSTRAINT Maintenance_Item_Work_ck UNIQUE (mechanicID, ST_ID, custID, date, vehicleID, maint_item_name)
);

 /*------------------------------------------------------------------
	Merchandise_Purchase
--------------------------------------------------------------------*/
CREATE TABLE Merchandise_Purchase (
	purchaseID int NOT NULL AUTO_INCREMENT,
	ST_ID int NOT NULL,
	custID int NOT NULL,
	date Date NOT NULL,
	vehicleID int NOT NULL,
	itemSerialNum int NOT NULL,

	PRIMARY KEY Merchandise_Purchase_pk (purchaseID),
	CONSTRAINT visit_Merchandise_Purchase_fk FOREIGN KEY (ST_ID, custID, date, vehicleID) REFERENCES Visit (ST_ID, custID, date, vehicleID),
	CONSTRAINT Merchandise_Item_InStore_Merchandise_Purchase_fk FOREIGN KEY (itemSerialNum) REFERENCES Merchandise_Item_InStore (serialNum),
	CONSTRAINT Merchandise_Purchase_ck UNIQUE (ST_ID, custID, date, vehicleID, itemSerialNum)
);

 /*------------------------------------------------------------------
	Visit
--------------------------------------------------------------------*/
CREATE TABLE Visit (
	ST_ID int NOT NULL,
	custID int NOT NULL,
	date Date NOT NULL,
	vehicleID int NOT NULL,
	pointsUsed int,

	PRIMARY KEY Visit_pk (ST_ID, custID, date, vehicleID),
	CONSTRAINT Employee_Visit_fk FOREIGN KEY (ST_ID) REFERENCES Employee (employeeID),
	CONSTRAINT Vehicle_Owner_Visit_fk FOREIGN KEY (custID, vehicleID) REFERENCES Vehicle_Owner (custID, vehicleID)
);

 /*------------------------------------------------------------------
	Maintenance_Interval_Item
--------------------------------------------------------------------*/
CREATE TABLE Maintenance_Interval_Item (
	numMiles int NOT NULL,
	vehicleID int NOT NULL,
	maint_item_name VARCHAR(40) NOT NULL,

	PRIMARY KEY Maintenance_Interval_Item_pk (numMiles, vehicleID, maint_item_name),
	CONSTRAINT Vehicle_Interval_Maintenance_Interval_Item_fk FOREIGN KEY (numMiles, vehicleID) REFERENCES Vehicle_Interval (milesDriven, vehicleID),
	CONSTRAINT Vehicle_Maintenance_Maintenance_Interval_Item_fk FOREIGN KEY (vehicleID, maint_item_name) REFERENCES Vehicle_Maintenance (vehicleID, maint_item_name)
);

 Maint_Pack_Item
--------------------------------------------------------------------*/
CREATE TABLE Maintenanace_Pack_Item (
	packID int NOT NULL AUTO_INCREMENT,
	mechanicID int NOT NULL,
	ST_ID int NOT NULL,
	custID int NOT NULL,
	date Date NOT NULL,
	vehicleID int NOT NULL,
	maint_item_name VARCHAR(40) NOT NULL,
	numMiles int NOT NULL,
	finalCost int,

	PRIMARY KEY Maintenanace_Pack_Item_pk (packID),
	CONSTRAINT Employee_Maintenanace_Pack_Item_fk FOREIGN KEY (mechanicID) REFERENCES Employee(employeeID),
	CONSTRAINT Visit_Maintenanace_Pack_Item_fk FOREIGN KEY (ST_ID, custID, date, vehicleID) REFERENCES Visit (ST_ID, custID, date, vehicleID),
	CONSTRAINT Maintenance_Interval_Item_Maintenanace_Pack_Item_fk FOREIGN KEY (vehicleID, maint_item_name, numMiles) REFERENCES Maintenanace_Pack_Item (vehicleID, maint_item_name, numMiles),
	CONSTRAINT Maintenanace_Pack_Item_ck UNIQUE (mechanicId, ST_ID, custID, date, vehicleID, maint_item_name)
);
 /*------------------------------------------------------------------
 Employee
--------------------------------------------------------------------*/
CREATE TABLE Employee (
	employeeID int NOT NULL AUTO_INCREMENT,
	type VARCHAR(35) NOT NULL,
	firstName VARCHAR(20) NOT NULL,
	lastName VARCHAR(20) NOT NULL,
	phone VARCHAR(15) NOT NULL,

	PRIMARY KEY Employee_pk (employeeID),
	CONSTRAINT Employee_Type_Employee_fk FOREIGN KEY (type) REFERENCES Employee_Type (type),
	CONSTRAINT Employee_ck UNIQUE (firstName, lastName, phone)
);

 /*------------------------------------------------------------------
 Certified_Mechanic
--------------------------------------------------------------------*/
CREATE TABLE Certified_Mechanic(
	employeeID int NOT NULL,

	PRIMARY KEY Certified_Mechanic_pk (employeeID),
	CONSTRAINT Employee_Certified_Mechanic_fk FOREIGN KEY (employeeID) REFERENCES Employee (employeeID)
);

 /*------------------------------------------------------------------
 Specific_Cert
--------------------------------------------------------------------*/
CREATE TABLE Specific_Cert(
	employeeID int NOT NULL,
	cert_name VARCHAR(60) NOT NULL,

	PRIMARY KEY Specific_Cert_pk (employeeID, cert_name),
	CONSTRAINT Certified_Mechanic_Specific_Cert_fk FOREIGN KEY (employeeID) REFERENCES Certified_Mechanic (employeeID),
	CONSTRAINT Certification_Specific_Cert_fk FOREIGN KEY (cert_name) REFERENCES Certification (name)
);
 /*------------------------------------------------------------------
 Certification
--------------------------------------------------------------------*/
CREATE TABLE Certification(
	name VARCHAR(60) NOT NULL,
	skill VARCHAR(40),

	PRIMARY KEY Certification_pk (name),
);

 /*------------------------------------------------------------------
 Skill
--------------------------------------------------------------------*/
CREATE TABLE Skill(
	skillName VARCHAR(45) NOT NULL,

	PRIMARY KEY Skill_pk (skillName)
);

 /*------------------------------------------------------------------
 Mechanic_Skill
--------------------------------------------------------------------*/
CREATE TABLE Mechanic_Skill(
	skill VARCHAR(45) NOT NULL,
	employeeID int NOT NULL,

	PRIMARY KEY Mechanic_Skill_pk (skill, employeeID),
	CONSTRAINT Skill_Mechanic_Skill_fk FOREIGN KEY (skill) REFERENCES Mechanic_Skill (skillName),
	CONSTRAINT Employee_Mechanic_Skill_fk FOREIGN KEY (employeeID) REFERENCES Employee (employeeID)
);

 /*------------------------------------------------------------------
 Mentorship
--------------------------------------------------------------------*/
CREATE TABLE Mentorship(
	mentorSkill VARCHAR(45) NOT NULL,
	mentorEmployeeID int NOT NULL,
	employeeID int NOT NULL,

	PRIMARY KEY Mentorship_pk (mentorSkill, mentorEmployeeID, employeeID),
	CONSTRAINT Mechanic_Skill_Mentorship_fk FOREIGN KEY (mentorSkill, mentorEmployeeID) REFERENCES Mechanic_Skill (skill, employeeID),
	CONSTRAINT Employee_Mentorship_fk FOREIGN KEY (employeeID) REFERENCES Employee (employeeID)
);

 /*------------------------------------------------------------------
 Employee_of_The_Month
--------------------------------------------------------------------*/
CREATE TABLE Employee_of_The_Month(
	month int NOT NULL,
	year int NOT NULL,
	employeeID int NOT NULL,

	PRIMARY KEY Employee_of_The_Month_pk (month, year, employeeID),
	CONSTRAINT Employee_Employee_of_The_Month_fk FOREIGN KEY (employeeID) REFERENCES Employee (employeeID)
);

 /*------------------------------------------------------------------
 Reward
--------------------------------------------------------------------*/
CREATE TABLE Reward(
	name VARCHAR(50) NOT NULL,
	description VARCHAR(100),

	PRIMARY KEY Reward_pk (name)
);

 /*------------------------------------------------------------------
 Employee_Reward
--------------------------------------------------------------------*/
CREATE TABLE Employee_Reward(
	rewardName VARCHAR(50) NOT NULL,
	monthAwarded int NOT NULL,
	yearAwarded int NOT NULL,
	employeeID int NOT NULL,

	PRIMARY KEY Employee_Reward_pk (rewardName, monthAwarded, yearAwarded, employeeID),
	CONSTRAINT Reward_Employee_Reward_fk FOREIGN KEY (rewardName) REFERENCES Reward (name),
	CONSTRAINT Employee_of_The_Month_Employee_Reward FOREIGN KEY (monthAwarded, yearAwarded, employeeID) REFERENCES Employee_of_The_Month (month, year, employeeID)
);
/*------------------------------------------------------------------
Employee_Reward
--------------------------------------------------------------------*/
CREATE TABLE Employee_Type(
  `type` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`type`));
 /*------------------------------------------------------------------
 Hours_per_Year
--------------------------------------------------------------------*/
CREATE TABLE Hours_per_Year();

 /*------------------------------------------------------------------
 Past
--------------------------------------------------------------------*/
CREATE TABLE Past();

 /*------------------------------------------------------------------
 Present
--------------------------------------------------------------------*/
CREATE TABLE Present(
  `startDate` DATETIME NOT NULL,
  `tierNumber` INT NOT NULL,
  `employeeID` INT NOT NULL,
  PRIMARY KEY (`employeeID`),
  INDEX `tierNumber_idx` (`tierNumber` ASC),
  CONSTRAINT `tierNumber`
    FOREIGN KEY (`tierNumber`)
    REFERENCES `Benefits_Tier` (`tierNumber`),
    
    
    
    
  CONSTRAINT `employeeID`
    FOREIGN KEY (`employeeID`)
    REFERENCES `Employee` (`employeeID`));

 /*------------------------------------------------------------------
 Benefits_Tier
--------------------------------------------------------------------*/
CREATE TABLE Benefits_Tier(
  `tierNumber` INT NOT NULL,
  `vacationPerHourRate` FLOAT NULL,
  `sickPerHourRate` FLOAT NULL,
  `minYearOnJob` INT NULL,
  PRIMARY KEY (`tierNumber`));

 /*------------------------------------------------------------------
 Retirement_Tier
--------------------------------------------------------------------*/
CREATE TABLE Retirement_Tier(
  `tierNumber` INT NOT NULL,
  `baseDollarRate` INT NOT NULL,
  `minYearsOnJob` INT NOT NULL,
  PRIMARY KEY (`tierNumber`));

 /*------------------------------------------------------------------
 Safety_Class
--------------------------------------------------------------------*/
CREATE TABLE Safety_Class();

 /*------------------------------------------------------------------
 Safety_Class_Attendee
--------------------------------------------------------------------*/
CREATE TABLE Safety_Class_Attendee();

 /*------------------------------------------------------------------
Vehicle
--------------------------------------------------------------------*/
CREATE TABLE Vehicle();

 /*------------------------------------------------------------------
Customer
--------------------------------------------------------------------*/
CREATE TABLE Customer();

 /*------------------------------------------------------------------
Vehicle_Owner
--------------------------------------------------------------------*/
CREATE TABLE Vehicle_Owner();

 /*------------------------------------------------------------------
ZipArea
--------------------------------------------------------------------*/
CREATE TABLE ZipArea();

 /*------------------------------------------------------------------
Individual
--------------------------------------------------------------------*/
CREATE TABLE Individual();

 /*------------------------------------------------------------------
Business
--------------------------------------------------------------------*/
CREATE TABLE Business();

 /*------------------------------------------------------------------
Referred
--------------------------------------------------------------------*/
CREATE TABLE Referred();

 /*------------------------------------------------------------------
Referred_by_Steady
--------------------------------------------------------------------*/
CREATE TABLE Referred_by_Steady();

 /*------------------------------------------------------------------
Referred_by_Premier
--------------------------------------------------------------------*/
CREATE TABLE Referred_by_Premier();

 /*------------------------------------------------------------------
Steady
--------------------------------------------------------------------*/
CREATE TABLE Steady();

 /*------------------------------------------------------------------
Prospective
--------------------------------------------------------------------*/
CREATE TABLE Prospective();

 /*------------------------------------------------------------------
Referred_by_Steady
--------------------------------------------------------------------*/
CREATE TABLE Steady_Email();

 /*------------------------------------------------------------------
Prospective_Email
--------------------------------------------------------------------*/
CREATE TABLE Prospective_Email();

 /*------------------------------------------------------------------
Email
--------------------------------------------------------------------*/
CREATE TABLE Email();

 /*------------------------------------------------------------------
Referred_by_Steady
--------------------------------------------------------------------*/
