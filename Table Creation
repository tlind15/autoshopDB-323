/*------------------------------------------------------------------
Customer
--------------------------------------------------------------------*/
CREATE TABLE Customer (
    custID INT NOT NULL AUTO_INCREMENT,
    phone VARCHAR(12) NOT NULL,
    email VARCHAR(50) NOT NULL,
    PRIMARY KEY Customer_pk (custID),
    CONSTRAINT Customer_ck UNIQUE (phone , email)
);

/*------------------------------------------------------------------
Premier
--------------------------------------------------------------------*/
CREATE TABLE Premier (
    custID INT NOT NULL,
    registerDate DATE,
    points INT,
    ReferredBenefitsUsed INT,
    PRIMARY KEY Premier_pk (custID),
    CONSTRAINT FOREIGN KEY (custID)
        REFERENCES Customer (custID)
);

/*------------------------------------------------------------------
Steady
--------------------------------------------------------------------*/
CREATE TABLE Steady (
    custID INT NOT NULL,
    registerDate DATE,
    points INT,
    ReferredBenefitsUsed INT,
    PRIMARY KEY Steady_pk (custID),
    CONSTRAINT FOREIGN KEY (custID)
        REFERENCES Customer (custID)
);

/*------------------------------------------------------------------
Prospective
--------------------------------------------------------------------*/
CREATE TABLE Prospective (
    custID INT NOT NULL,
    PRIMARY KEY Prospective_pk (custID),
    CONSTRAINT Customer_Prospective_fk FOREIGN KEY (custID)
        REFERENCES Customer (custID)
);

/*------------------------------------------------------------------
Referred
--------------------------------------------------------------------*/
CREATE TABLE Referred (
    custID INT NOT NULL,
    PRIMARY KEY Referred_pk (custID),
    CONSTRAINT Customer_Referred_fk FOREIGN KEY (custID)
        REFERENCES Customer (custID)
);

 /*------------------------------------------------------------------
ZipArea
--------------------------------------------------------------------*/
CREATE TABLE ZipArea (
    zipcode INT NOT NULL,
    city VARCHAR(40) NOT NULL,
    state VARCHAR(40) NOT NULL,
    PRIMARY KEY ZipArea_pk (zipcode),
    CONSTRAINT ZipArea_ck UNIQUE (city , state)
);

/*------------------------------------------------------------------
Individual
--------------------------------------------------------------------*/
CREATE TABLE Individual (
    custID INT NOT NULL,
    firstName VARCHAR(40) NOT NULL,
    lastName VARCHAR(40) NOT NULL,
    street VARCHAR(40) NOT NULL,
    zipcode INT NOT NULL,
    PRIMARY KEY Individual_pk (custID),
    CONSTRAINT Customer_Individual_fk FOREIGN KEY (custID)
        REFERENCES Customer (custID),
    CONSTRAINT ZipArea_Individual_fk FOREIGN KEY (zipcode)
        REFERENCES ZipArea (zipcode),
    CONSTRAINT Individual_ck UNIQUE (firstName , lastName , street)
);

 /*------------------------------------------------------------------
Business
--------------------------------------------------------------------*/
CREATE TABLE Business (
    custID INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    PRIMARY KEY Business_pk (custID),
    CONSTRAINT Customer_Business_fk FOREIGN KEY (custID)
        REFERENCES Customer (custID),
    CONSTRAINT Business_ck UNIQUE (name)
);

/*------------------------------------------------------------------
Address
--------------------------------------------------------------------*/
CREATE TABLE Address (
    custID INT NOT NULL,
    street VARCHAR(50) NOT NULL,
    zipcode INT NOT NULL,
    addressType VARCHAR(30),
    PRIMARY KEY Address_pk (custID , street),
    CONSTRAINT Business_Address_fk FOREIGN KEY (custID)
        REFERENCES Business (custID),
    CONSTRAINT ZipArea_Address_fk FOREIGN KEY (zipcode)
        REFERENCES ZipArea (zipcode)
);

 /*------------------------------------------------------------------
Premier Payment
--------------------------------------------------------------------*/
CREATE TABLE Premier_Payment (
    custID INT NOT NULL,
    month INT NOT NULL,
    year INT NOT NULL,
    paymentTotal INT,
    PRIMARY KEY Premier_Payments_pk (custID , month , year),
    CONSTRAINT Premier_Premier_Payments_fk FOREIGN KEY (custID)
        REFERENCES Premier (custID)
);

 /*------------------------------------------------------------------
Referred_by_Steady
--------------------------------------------------------------------*/
CREATE TABLE Referred_by_Steady (
    custID INT NOT NULL,
    referredByID INT NOT NULL,
    referredDate DATE,
    PRIMARY KEY Referred_by_Steady_pk (custID),
    CONSTRAINT Referred_Referred_by_Steady_fk FOREIGN KEY (custID)
        REFERENCES Referred (custID),
    CONSTRAINT Steady_Referred_by_Steady_fk FOREIGN KEY (referredByID)
        REFERENCES Steady (custID)
);

 /*------------------------------------------------------------------
Referred_by_Premier
--------------------------------------------------------------------*/
CREATE TABLE Referred_by_Premier (
    custID INT NOT NULL,
    referredByID INT NOT NULL,
    referredDate DATE,
    PRIMARY KEY Referred_by_Premier_pk (custID),
    CONSTRAINT Referred_Referred_by_Premier_fk FOREIGN KEY (custID)
        REFERENCES Referred (custID),
    CONSTRAINT Premier_Referred_by_Premier_fk FOREIGN KEY (referredByID)
        REFERENCES Premier (custID)
);

/*------------------------------------------------------------------
Vehicle
--------------------------------------------------------------------*/
CREATE TABLE Vehicle (
    vehicleID INT NOT NULL AUTO_INCREMENT,
    make VARCHAR(30) NOT NULL,
    model VARCHAR(30) NOT NULL,
    year INT NOT NULL,
    PRIMARY KEY Vehicle_pk (vehicleID),
    CONSTRAINT Vehicle_ck UNIQUE (make , model , year)
);

 /*------------------------------------------------------------------
Vehicle_Owner
--------------------------------------------------------------------*/
CREATE TABLE Vehicle_Owner (
    custID INT NOT NULL,
    vehicleID INT NOT NULL,
    licensePlate VARCHAR(10),
    startMileage INT,
    milesPerYear INT,
    PRIMARY KEY Vehicle_Owner_pk (custID , vehicleID),
    CONSTRAINT Customer_Vehicle_Owner_fk FOREIGN KEY (custID)
        REFERENCES Customer (custID),
    CONSTRAINT Vehicle_Vehicle_Owner_fk FOREIGN KEY (vehicleID)
        REFERENCES Vehicle (vehicleID)
);

/*-------------------------------------------------------------------
Vehicle_Interval
--------------------------------------------------------------------*/
CREATE TABLE Vehicle_Interval (
    vehicleID INT NOT NULL,
    milesDriven INT NOT NULL,
    PRIMARY KEY Vehicle_Interval_pk (vehicleID , milesDriven),
    CONSTRAINT Vehicle_Vehicle_Interval_fk FOREIGN KEY (vehicleID)
        REFERENCES Vehicle (vehicleID)
);

/*------------------------------------------------------------------
  Maintence_Item
	Note: name has been changed to Mname due to query name conflict.
--------------------------------------------------------------------*/
CREATE TABLE Maintenance_Item (
    mName VARCHAR(40) NOT NULL,
    laborHours INT,
    PRIMARY KEY maintenance_item_pk (mName)
);

/*-------------------------------------------------------------------
Vehicle_Maintenance
--------------------------------------------------------------------*/
CREATE TABLE Vehicle_Maintenance (
    vehicleID INT NOT NULL,
    maint_item_name VARCHAR(40) NOT NULL,
    cost INT,
    PRIMARY KEY Vehicle_Maintenance_pk (vehicleID , maint_item_name),
    CONSTRAINT Vehicle_Vehicle_Maintenance_fk FOREIGN KEY (vehicleID)
        REFERENCES Vehicle (vehicleID),
    CONSTRAINT Maintenance_Item_Vehicle_Maintenance_fk FOREIGN KEY (maint_item_name)
        REFERENCES Maintenance_Item (mName)
);

/*------------------------------------------------------------------
	Maintenance_Interval_Item
--------------------------------------------------------------------*/
CREATE TABLE Maintenance_Interval_Item (
    vehicleID INT NOT NULL,
    maint_item_name VARCHAR(40) NOT NULL,
    numMiles INT NOT NULL,
    PRIMARY KEY Maintenance_Interval_Item_pk (vehicleID , maint_item_name , numMiles),
    CONSTRAINT Vehicle_Interval_Maintenance_Interval_Item_fk FOREIGN KEY (vehicleID , numMiles)
        REFERENCES Vehicle_Interval (vehicleID , milesDriven),
    CONSTRAINT Vehicle_Maintenance_Maintenance_Interval_Item_fk FOREIGN KEY (vehicleID , maint_item_name)
        REFERENCES Vehicle_Maintenance (vehicleID , maint_item_name)
);

 /*------------------------------------------------------------------
Email
--------------------------------------------------------------------*/
CREATE TABLE Email (
    date DATETIME NOT NULL,
    PRIMARY KEY Email_pk (date)
);

 /*------------------------------------------------------------------
Steady_Email
--------------------------------------------------------------------*/
CREATE TABLE Steady_Email (
    custID INT NOT NULL,
    vehicleID INT NOT NULL,
    date DATETIME NOT NULL,
    PRIMARY KEY Steady_Email_pk (date),
    CONSTRAINT Steady_Steady_Email_fk FOREIGN KEY (custID)
        REFERENCES Steady (custID),
    CONSTRAINT Vehicle_Owner_Steady_Email_fk FOREIGN KEY (custID , vehicleID)
        REFERENCES Vehicle_Owner (custID , vehicleID),
    CONSTRAINT Email_Steady_Email_fk FOREIGN KEY (date)
        REFERENCES Email (date)
);

 /*------------------------------------------------------------------
Prospective_Email
--------------------------------------------------------------------*/
CREATE TABLE Prospective_Email (
    custId INT NOT NULL,
    date DATETIME NOT NULL,
    itemSpecial VARCHAR(40) NOT NULL,
    PRIMARY KEY Prospective_Email_pk (date),
    CONSTRAINT Prospective_Prospective_Email_fk FOREIGN KEY (custID)
        REFERENCES Prospective (custID),
    CONSTRAINT Email_Prospective_Email_fk FOREIGN KEY (date)
        REFERENCES Email (date),
    CONSTRAINT Maintenance_Item_Prospective_Email_fk FOREIGN KEY (itemSpecial)
        REFERENCES Maintenance_Item (mName)
);

/*------------------------------------------------------------------
	Part
--------------------------------------------------------------------*/
CREATE TABLE Part (
    name VARCHAR(50) NOT NULL,
    PRIMARY KEY Part_pk (name)
);

 /*------------------------------------------------------------------
	Supplier
--------------------------------------------------------------------*/
CREATE TABLE Supplier (
    name VARCHAR(50) NOT NULL,
    email VARCHAR(20),
    phone VARCHAR(12),
    PRIMARY KEY Supplier_pk (name)
);

/*------------------------------------------------------------------
 Merchandise
--------------------------------------------------------------------*/
CREATE TABLE Merchandise (
    name VARCHAR(50) NOT NULL,
    PRIMARY KEY Merchandise_pk (name)
);

 /*------------------------------------------------------------------
	Part_Order
--------------------------------------------------------------------*/
CREATE TABLE Part_Order (
    orderID INT NOT NULL AUTO_INCREMENT,
    partName VARCHAR(50) NOT NULL,
    supplierName VARCHAR(50) NOT NULL,
    date DATE,
    quantity INT,
    priceForOne INT,
    PRIMARY KEY Part_Order_pk (orderID),
    CONSTRAINT part_part_order_fk FOREIGN KEY (partName)
        REFERENCES Part (name),
    CONSTRAINT supplier_part_prder_fk FOREIGN KEY (supplierName)
        REFERENCES Supplier (name),
    CONSTRAINT Part_Order_ck UNIQUE (partName , supplierName , date)
);

/*------------------------------------------------------------------
  Part_at_Daves
--------------------------------------------------------------------*/
CREATE TABLE Part_at_Daves (
    orderedFromID INT NOT NULL,
    serialNum INT NOT NULL,
    PRIMARY KEY Part_at_Daves_pk (serialNum),
    CONSTRAINT Part_Order_Part_at_Daves_fk FOREIGN KEY (orderedFromID)
        REFERENCES Part_Order (orderID)
);

/*------------------------------------------------------------------
  Part_Maintenance
--------------------------------------------------------------------*/
CREATE TABLE Part_Maintenance (
    mName VARCHAR(40) NOT NULL,
    partSerialNum INT NOT NULL,
    PRIMARY KEY part_maintenance_pk (mName , partSerialNum),
    CONSTRAINT maintenance_item_part_maintenance_fk FOREIGN KEY (mName)
        REFERENCES Maintenance_Item (mName),
    CONSTRAINT part_at_Daves_part_maintenance_fk FOREIGN KEY (partSerialNum)
        REFERENCES Part_at_Daves (serialNum)
);

 /*------------------------------------------------------------------
	Merchandise_Item_Order
--------------------------------------------------------------------*/
CREATE TABLE Merchandise_Item_Order (
    merchandiseOrderID INT NOT NULL AUTO_INCREMENT,
    supplierName VARCHAR(50) NOT NULL,
    merchandiseItem VARCHAR(50) NOT NULL,
    date DATE,
    quantity INT,
    priceForOne INT,
    PRIMARY KEY Merchandise_Item_Order_pk (merchandiseOrderID),
    CONSTRAINT supplier_merchandise_item_order_fk FOREIGN KEY (supplierName)
        REFERENCES Supplier (name),
    CONSTRAINT merchandise_merchandise_item_order_fk FOREIGN KEY (merchandiseItem)
        REFERENCES Merchandise (name),
    CONSTRAINT Merchandise_Item_Order_ck UNIQUE (supplierName , merchandiseItem , date)
);

 /*------------------------------------------------------------------
	Merchandise_Item_Instore
--------------------------------------------------------------------*/
CREATE TABLE Merchandise_Item_InStore (
    orderedFromID INT NOT NULL,
    serialNum INT NOT NULL,
    PRIMARY KEY Merchandise_Item_InStore_pk (serialNum),
    CONSTRAINT Merchandise_Item_Order_Merchandise_Item_InStore_fk FOREIGN KEY (orderedFromID)
        REFERENCES Merchandise_Item_Order (merchandiseOrderID)
);

/*------------------------------------------------------------------
Employee_Type
--------------------------------------------------------------------*/
CREATE TABLE Employee_Type (
    type VARCHAR(50) NOT NULL,
    PRIMARY KEY Employee_Type_pk (type)
);
  
  /*------------------------------------------------------------------
 Employee
--------------------------------------------------------------------*/
CREATE TABLE Employee (
    employeeID INT NOT NULL AUTO_INCREMENT,
    type VARCHAR(50) NOT NULL,
    firstName VARCHAR(20) NOT NULL,
    lastName VARCHAR(20) NOT NULL,
    phone VARCHAR(15) NOT NULL,
    PRIMARY KEY Employee_pk (employeeID),
    CONSTRAINT Employee_Type_Employee_fk FOREIGN KEY (type)
        REFERENCES Employee_Type (type),
    CONSTRAINT Employee_ck UNIQUE (firstName , lastName , phone)
);

/*------------------------------------------------------------------
	Visit
--------------------------------------------------------------------*/
CREATE TABLE Visit (
    ST_ID INT NOT NULL,
    custID INT NOT NULL,
    vehicleID INT NOT NULL,
    `date` DATETIME NOT NULL,
    pointsUsed INT,
    PRIMARY KEY Visit_pk (ST_ID , custID , vehicleID , date),
    CONSTRAINT Employee_Visit_fk FOREIGN KEY (ST_ID)
        REFERENCES Employee (employeeID),
    CONSTRAINT Vehicle_Owner_Visit_fk FOREIGN KEY (custID , vehicleID)
        REFERENCES Vehicle_Owner (custID , vehicleID)
);

/*-------------------------------------------------------------------
 Maint_Pack_Item
--------------------------------------------------------------------*/
CREATE TABLE Maintenance_Pack_Item (
    packID INT NOT NULL AUTO_INCREMENT,
    mechanicID INT NOT NULL,
    ST_ID INT NOT NULL,
    custID INT NOT NULL,
    date DATETIME NOT NULL,
    vehicleID INT NOT NULL,
    maint_item_name VARCHAR(40) NOT NULL,
    numMiles INT NOT NULL,
    finalCost INT,
    PRIMARY KEY Maintenanace_Pack_Item_pk (packID),
    CONSTRAINT Employee_Maintenanace_Pack_Item_fk FOREIGN KEY (mechanicID)
        REFERENCES Employee (employeeID),
    CONSTRAINT Visit_Maintenanace_Pack_Item_fk FOREIGN KEY (ST_ID , custID , vehicleID , date)
        REFERENCES Visit (ST_ID , custID , vehicleID , date),
    CONSTRAINT Maintenance_Interval_Item_Maintenanace_Pack_Item_fk FOREIGN KEY (vehicleID , maint_item_name , numMiles) /*Issue here*/
        REFERENCES Maintenance_Interval_Item (vehicleID , maint_item_name , numMiles),
    CONSTRAINT Maintenanace_Pack_Item_ck UNIQUE (mechanicId , ST_ID , custID , date , vehicleID , maint_item_name , numMiles)
);

/*------------------------------------------------------------------
    Maint_Item_Work
--------------------------------------------------------------------*/
CREATE TABLE Maintenance_Item_Work (
    itemWorkID INT NOT NULL AUTO_INCREMENT,
    mechanicID INT NOT NULL,
    ST_ID INT NOT NULL,
    custID INT NOT NULL,
    date DATETIME NOT NULL,
    vehicleID INT NOT NULL,
    maint_item_name VARCHAR(40) NOT NULL,
    finalCost INT,
    PRIMARY KEY Maintenance_Item_Work_pk (itemWorkID),
    CONSTRAINT Employee_Maintenance_Item_Work_fk FOREIGN KEY (mechanicID)
        REFERENCES Employee (employeeID),
    CONSTRAINT visit_Maintenance_Item_Work_fk FOREIGN KEY (ST_ID , custID , vehicleID , date)
        REFERENCES Visit (ST_ID , custID , vehicleID , date),
    CONSTRAINT Vehicle_Maintenance_Maintenance_Item_Work_fk FOREIGN KEY (vehicleID , maint_item_name)
        REFERENCES Vehicle_Maintenance (vehicleID , maint_item_name),
    CONSTRAINT Maintenance_Item_Work_ck UNIQUE (mechanicID , ST_ID , custID , date , vehicleID , maint_item_name)
);

 /*------------------------------------------------------------------
	Merchandise_Purchase
--------------------------------------------------------------------*/
CREATE TABLE Merchandise_Purchase (
    purchaseID INT NOT NULL AUTO_INCREMENT,
    ST_ID INT NOT NULL,
    custID INT NOT NULL,
    date DATETIME NOT NULL,
    vehicleID INT NOT NULL,
    itemSerialNum INT NOT NULL,
    PRIMARY KEY Merchandise_Purchase_pk (purchaseID),
    CONSTRAINT visit_Merchandise_Purchase_fk FOREIGN KEY (ST_ID , custID , vehicleID , date)
        REFERENCES Visit (ST_ID , custID , vehicleID , date),
    CONSTRAINT Merchandise_Item_InStore_Merchandise_Purchase_fk FOREIGN KEY (itemSerialNum)
        REFERENCES Merchandise_Item_InStore (serialNum),
    CONSTRAINT Merchandise_Purchase_ck UNIQUE (ST_ID , custID , date , vehicleID , itemSerialNum)
);

/*------------------------------------------------------------------
 Benefits_Tier
--------------------------------------------------------------------*/
CREATE TABLE Benefits_Tier (
    tierNumber INT NOT NULL,
    vacationPerHourRate DECIMAL(3 , 2 ),
    sickPerHourRate DECIMAL(3 , 2 ),
    minYearsOnJob INT,
    PRIMARY KEY Benefits_Tier_pk (tierNumber)
);

/*------------------------------------------------------------------
 Present
--------------------------------------------------------------------*/
CREATE TABLE Present (
    employeeID INT NOT NULL,
    startDate DATE,
    tierNumber INT,
    PRIMARY KEY Present_pk (employeeID),
    CONSTRAINT Employee_Present_fk FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID),
    CONSTRAINT Benefits_Tier_Present_fk FOREIGN KEY (tierNumber)
        REFERENCES Benefits_Tier (tierNumber)
);
 
 /*------------------------------------------------------------------
 Retirement_Tier
--------------------------------------------------------------------*/
CREATE TABLE Retirement_Tier (
    tierNumber INT NOT NULL,
    baseDollarRate INT,
    minYearsOnJob INT,
    PRIMARY KEY Retirement_Tier_pk (tierNumber)
);

/*------------------------------------------------------------------
 Past
--------------------------------------------------------------------*/
CREATE TABLE Past (
    employeeID INT NOT NULL,
    endDate DATE,
    tierNumber INT,
    PRIMARY KEY Past_pk (employeeID),
    CONSTRAINT Employee_Past_fk FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID),
    CONSTRAINT Retirement_Tier_Past_fk FOREIGN KEY (tierNumber)
        REFERENCES Retirement_Tier (tierNumber)
);

/*------------------------------------------------------------------
 Hours_per_Year
--------------------------------------------------------------------*/
CREATE TABLE Hours_per_Year (
    employeeID INT NOT NULL,
    year INT NOT NULL,
    hoursWorked INT,
    PRIMARY KEY Hours_per_Year_pk (employeeID , year),
    CONSTRAINT Employee_Hours_per_Year_fk FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID)
);

/*------------------------------------------------------------------
 Safety_Class
--------------------------------------------------------------------*/
CREATE TABLE Safety_Class (
    date DATE NOT NULL,
    classNumber INT,
    PRIMARY KEY Safety_Class_pk (date)
);

/*------------------------------------------------------------------
 Safety_Class_Attendee
--------------------------------------------------------------------*/
CREATE TABLE Safety_Class_Attendee (
    employeeID INT NOT NULL,
    classDate DATE NOT NULL,
    PRIMARY KEY Safety_Class_Attendee_pk (employeeID , classDate),
    CONSTRAINT Safety_Class_Safety_Class_Attendee_fk FOREIGN KEY (classDate)
        REFERENCES Safety_Class (date),
    CONSTRAINT Employee_Safety_Class_Attendee FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID)
);

/*------------------------------------------------------------------
 Reward
--------------------------------------------------------------------*/
CREATE TABLE Reward (
    name VARCHAR(50) NOT NULL,
    description VARCHAR(100),
    PRIMARY KEY Reward_pk (name)
);

 /*------------------------------------------------------------------
 Employee_of_The_Month
--------------------------------------------------------------------*/
CREATE TABLE Employee_of_The_Month (
    month INT NOT NULL,
    year INT NOT NULL,
    employeeID INT NOT NULL,
    PRIMARY KEY Employee_of_The_Month_pk (month , year , employeeID),
    CONSTRAINT Employee_Employee_of_The_Month_fk FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID)
);

/*------------------------------------------------------------------
 Employee_Reward
--------------------------------------------------------------------*/
CREATE TABLE Employee_Reward (
    rewardName VARCHAR(50) NOT NULL,
    monthAwarded INT NOT NULL,
    yearAwarded INT NOT NULL,
    employeeID INT NOT NULL,
    PRIMARY KEY Employee_Reward_pk (rewardName , monthAwarded , yearAwarded , employeeID),
    CONSTRAINT Reward_Employee_Reward_fk FOREIGN KEY (rewardName)
        REFERENCES Reward (name),
    CONSTRAINT Employee_of_The_Month_Employee_Reward FOREIGN KEY (monthAwarded , yearAwarded , employeeID)
        REFERENCES Employee_of_The_Month (month , year , employeeID)
);

 /*------------------------------------------------------------------
 Skill
--------------------------------------------------------------------*/
CREATE TABLE Skill (
    skillName VARCHAR(45) NOT NULL,
    PRIMARY KEY Skill_pk (skillName)
);

 /*------------------------------------------------------------------
 Mechanic_Skill
--------------------------------------------------------------------*/
CREATE TABLE Mechanic_Skill (
    skill VARCHAR(45) NOT NULL,
    employeeID INT NOT NULL,
    PRIMARY KEY Mechanic_Skill_pk (skill , employeeID),
    CONSTRAINT Skill_Mechanic_Skill_fk FOREIGN KEY (skill)
        REFERENCES Skill (skillName),
    CONSTRAINT Employee_Mechanic_Skill_fk FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID)
);

 /*------------------------------------------------------------------
 Mentorship
--------------------------------------------------------------------*/
CREATE TABLE Mentorship (
    mentorSkill VARCHAR(45) NOT NULL,
    mentorEmployeeID INT NOT NULL,
    employeeID INT NOT NULL,
    PRIMARY KEY Mentorship_pk (mentorSkill , mentorEmployeeID , employeeID),
    CONSTRAINT Mechanic_Skill_Mentorship_fk FOREIGN KEY (mentorSkill , mentorEmployeeID)
        REFERENCES Mechanic_Skill (skill , employeeID),
    CONSTRAINT Employee_Mentorship_fk FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID)
);

 /*------------------------------------------------------------------
 Certified_Mechanic
--------------------------------------------------------------------*/
CREATE TABLE Certified_Mechanic (
    employeeID INT NOT NULL,
    PRIMARY KEY Certified_Mechanic_pk (employeeID),
    CONSTRAINT Employee_Certified_Mechanic_fk FOREIGN KEY (employeeID)
        REFERENCES Employee (employeeID)
);

/*------------------------------------------------------------------
 Certification
--------------------------------------------------------------------*/
CREATE TABLE Certification (
    name VARCHAR(60) NOT NULL,
    skill VARCHAR(40),
    PRIMARY KEY Certification_pk (name)
);

 /*------------------------------------------------------------------
 Specific_Cert
--------------------------------------------------------------------*/
CREATE TABLE Specific_Cert (
    employeeID INT NOT NULL,
    cert_name VARCHAR(60) NOT NULL,
    PRIMARY KEY Specific_Cert_pk (employeeID , cert_name),
    CONSTRAINT Certified_Mechanic_Specific_Cert_fk FOREIGN KEY (employeeID)
        REFERENCES Certified_Mechanic (employeeID),
    CONSTRAINT Certification_Specific_Cert_fk FOREIGN KEY (cert_name)
        REFERENCES Certification (name)
);
